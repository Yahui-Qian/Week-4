{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;}
{\colortbl;\red255\green255\blue255;\red151\green0\blue126;\red0\green0\blue0;\red181\green0\blue19;
\red13\green100\blue1;\red20\green0\blue196;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c66667\c5098\c56863;\csgray\c0;\cssrgb\c76863\c10196\c8627;
\cssrgb\c0\c45490\c0;\cssrgb\c10980\c0\c81176;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 import\cf3  streamlit \cf2 as\cf3  st\
\cf2 import\cf3  networkx \cf2 as\cf3  nx\
\cf2 import\cf3  matplotlib.pyplot \cf2 as\cf3  plt\
\
st.set_page_config(page_title=\cf4 "Shortest Path Visualizer"\cf3 , layout=\cf4 "centered"\cf3 )\
\
st.title(\cf4 "\uc0\u55357 \u56983  \u26368 \u30701 \u36335 \u24452 \u21487 \u35270 \u21270  - \u22478 \u38215 \u23548 \u33322 "\cf3 )\
\
\cf5 # \uc0\u23450 \u20041 \u22270 \cf3 \
G = nx.DiGraph()\
\
edges = [\
    (\cf4 "Origin"\cf3 , \cf4 "A"\cf3 , \cf6 40\cf3 ),\
    (\cf4 "Origin"\cf3 , \cf4 "B"\cf3 , \cf6 60\cf3 ),\
    (\cf4 "Origin"\cf3 , \cf4 "C"\cf3 , \cf6 50\cf3 ),\
    (\cf4 "A"\cf3 , \cf4 "B"\cf3 , \cf6 10\cf3 ),\
    (\cf4 "A"\cf3 , \cf4 "D"\cf3 , \cf6 70\cf3 ),\
    (\cf4 "B"\cf3 , \cf4 "C"\cf3 , \cf6 20\cf3 ),\
    (\cf4 "B"\cf3 , \cf4 "D"\cf3 , \cf6 55\cf3 ),\
    (\cf4 "B"\cf3 , \cf4 "E"\cf3 , \cf6 40\cf3 ),\
    (\cf4 "C"\cf3 , \cf4 "E"\cf3 , \cf6 50\cf3 ),\
    (\cf4 "C"\cf3 , \cf4 "Destination"\cf3 , \cf6 80\cf3 ),\
    (\cf4 "D"\cf3 , \cf4 "E"\cf3 , \cf6 10\cf3 ),\
    (\cf4 "D"\cf3 , \cf4 "Destination"\cf3 , \cf6 60\cf3 ),\
    (\cf4 "E"\cf3 , \cf4 "Destination"\cf3 , \cf6 60\cf3 )\
]\
\
G.add_weighted_edges_from(edges)\
\
\cf5 # \uc0\u26368 \u30701 \u36335 \u24452 \u35745 \u31639 \cf3 \
shortest_path = nx.dijkstra_path(G, source=\cf4 "Origin"\cf3 , target=\cf4 "Destination"\cf3 )\
shortest_distance = nx.dijkstra_path_length(G, source=\cf4 "Origin"\cf3 , target=\cf4 "Destination"\cf3 )\
\
\cf5 # \uc0\u23637 \u31034 \u26368 \u30701 \u36335 \u24452 \cf3 \
st.markdown(\cf4 f"### \uc0\u9989  \u26368 \u30701 \u36335 \u24452 : \cf7 \{\cf4 ' \uc0\u8594  '\cf7 .join(shortest_path)\}\cf4 "\cf3 )\
st.markdown(\cf4 f"### \uc0\u55357 \u56527  \u26368 \u30701 \u36317 \u31163 : \cf7 \{shortest_distance\}\cf4  miles"\cf3 )\
\
\cf5 # \uc0\u21487 \u35270 \u21270 \u22270 \u24418 \cf3 \
pos = nx.spring_layout(G, seed=\cf6 42\cf3 )\
\
plt.figure(figsize=(\cf6 10\cf3 , \cf6 6\cf3 ))\
nx.draw(G, pos, with_labels=\cf2 True\cf3 , node_color=\cf4 "skyblue"\cf3 , node_size=\cf6 1200\cf3 , font_size=\cf6 14\cf3 )\
nx.draw_networkx_edge_labels(G, pos, edge_labels=\{(u, v): d[\cf4 'weight'\cf3 ] \cf2 for\cf3  u, v, d \cf2 in\cf3  G.edges(data=\cf2 True\cf3 )\})\
\
\cf5 # \uc0\u39640 \u20142 \u26368 \u30701 \u36335 \u24452 \cf3 \
path_edges = list(zip(shortest_path, shortest_path[\cf6 1\cf3 :]))\
nx.draw_networkx_edges(G, pos, edgelist=path_edges, edge_color=\cf4 "red"\cf3 , width=\cf6 3\cf3 )\
\
st.pyplot(plt)}